333333333

A.  Explain how digital signature works with public/private keypairs.

i) Public keypair is the key code that could be seen from the public, private keypair is the code that is private 
   from other people.


B.  Identify your favorite Java project this semester.  
    Describe two things you learned by doing the project.
    Describe two ways in which the project could be improved or expanded.
    
i)  My favorite java code is HelloWorld.
ii) I learned the beginning of java, and it attracted me to learn the java. l learned:
    public static void main(String[] args) the main method.
iii)It should have more information,and it's too simple.
    
    
C.  Describe two advantages of object-oriented programming.
    Describe two disadvantages of object-oriented programming.
    
i)The advantages:Improved software maintainability.Improved software-development productivity.
    Faster development.Lower cost of development.
    
ii)The disadvantages:Steep learning curve.Larger program size.Slower programs.
    Not suitable for all types of problems
    
    
D.  Consider the following PYTHON code for the MNode class given below.
    What is the difference in the way Python and Java handle the declaration of datatypes?

i)java need to tell it what is the datatype, but python don't nedd.

    Explain the difference in how constructors are written in Python vs Java.
ii) The difference in how constructors are written in Python vs Java is the constructors have to write
longer in java than python.
    Which language do you prefer?  Explain why.
iii) I prefer to use Python because it is more easy and less limitation.
    
-------------------------------------------------------------------------------------
    import hashlib

class MNode:

    pay=0
    left=0
    right=0

    def __init__(self, pay, left, right):
        self.pay=pay
        self.left=left
        self.right=right

    def merge(self, other):
        hashe=hashlib.sha256(self.pay+other.pay).hexdigest()
        return MNode(hashe,this,other)

    def getI(self, i):
        read=self
        bi=bin(i)[2:]
        for x in range(1, len(bi)):
            if bi[x]=='0':
                if read.left==0:
                    return 0
                else:
                    read=read.left
        
            else:
                if read.right==0:
                    return 0
                else:
                    read=read.right
        
        return read
-----------------------------------------------------------------------------
